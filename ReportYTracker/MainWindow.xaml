<Window x:Class="ReportYTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReportYTracker"
        xmlns:mac="clr-namespace:ReportYTracker.Context"
        mc:Ignorable="d"
        x:Name="MainWindowWindow"
        WindowStartupLocation="CenterScreen"
        Title="Sync YTracker &#x26; Timetta" MinHeight="450" MinWidth="800">
    <Window.DataContext>
        <mac:MainContext/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10 5 0 0"/>
        </Style>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10 5 0 0"/>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10 5 0 0"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    <Grid Grid.IsSharedSizeScope="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Border BorderThickness="1" CornerRadius="5" BorderBrush="Black" Padding="5" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock x:Name="TitleYTracker" Grid.Row="0" Text="YTracker" HorizontalAlignment="Center" Margin="0 0 0 5"/>
                    </StackPanel>
                    <Grid Grid.Row="1" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="UserNameTextBlockYT" Grid.Column="0" Text="UserName"/>
                        <TextBox Grid.Column="1" x:Name="yt_username" MinWidth="200" Text="{Binding UserNameYTracker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <Grid Grid.Row="2" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Password" Width="{Binding ActualWidth,ElementName=UserNameTextBlockYT}"/>
                        <PasswordBox Grid.Column="1" x:Name="yt_password" MinWidth="200" PasswordChanged="yt_password_PasswordChanged"/>
                    </Grid>
                    <CheckBox Grid.Row="3" HorizontalAlignment="Center" Margin="0 5 0 0" Content="Remember me?" IsChecked="{Binding IsSaveCredentialsYTracker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </Border>
            <Border Grid.Column="1" BorderThickness="1" CornerRadius="5" BorderBrush="Black" Padding="5" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock Grid.Row="0" Text="Timetta" HorizontalAlignment="Center" Margin="0 0 0 5"/>
                    </StackPanel>
                    <Grid Grid.Row="1" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="UserNameTextBlockTimetta" Grid.Column="0" Text="UserName"/>
                        <TextBox Grid.Column="1" x:Name="tm_username" MinWidth="200" Text="{Binding UserNameTM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                    <Grid Grid.Row="2" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Password" Width="{Binding ActualWidth,ElementName=UserNameTextBlockTimetta}"/>
                        <PasswordBox Grid.Column="1" x:Name="tm_password" MinWidth="200" PasswordChanged="tm_password_PasswordChanged"/>
                    </Grid>
                    <CheckBox Grid.Row="3" HorizontalAlignment="Center" Margin="0 5 0 0" Content="Remember me?" IsChecked="{Binding IsSaveCredentialsTM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </Border>
            <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" BorderThickness="1" CornerRadius="5" BorderBrush="Black" Padding="5" Margin="5">
                <Grid HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="RangeDateTextBlock" Grid.Row="0" Grid.ColumnSpan="2" Text="Date's range, only one week in month, like in timetta" HorizontalAlignment="Center" Margin="0 0 0 5"/>
                    <Grid Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="DateFromTextBlock" Grid.Column="0" Text="Date from"/>
                        <DatePicker Grid.Column="1" Grid.Row="1" MinWidth="200" SelectedDate="{Binding DateFrom, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                    </Grid>
                    <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" Margin="10 0 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Date to" Width="{Binding ActualWidth,ElementName=DateFromTextBlock}"/>
                        <DatePicker Grid.Column="1" Grid.Row="1" MinWidth="200" IsEnabled="False" SelectedDate="{Binding DateTo, UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>
                    </Grid>
                </Grid>
            </Border>
            <StackPanel Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="5 5 5 5"/>
                        <Setter Property="Border.CornerRadius" Value="5"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                </StackPanel.Resources>
                <Button Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Left" x:Name="GetYaTrackerBtn" Click="GetYaTrackerBtn_Click" Height="auto" Content="Получить данные YTracker"/>
                <Button Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" IsEnabled="{Binding IsEnabledSync,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Content="Синхронизировать с Timetta" HorizontalAlignment="Left"  x:Name="SyncBtn" Click="SyncBtn_Click" Height="30"/>
            </StackPanel>
            <Grid Grid.Row="3" Grid.ColumnSpan="2">
                <ProgressBar local:ProgressBarSmoother.SmoothValue="{Binding Progress, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                         IsIndeterminate="{Binding ProgressIsIndeterminate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                         Height="15" Foreground="{Binding ProgressColor,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Margin="0 0 0 2"/>
                <TextBlock Text="{Binding Progress, Mode=OneWay,UpdateSourceTrigger=PropertyChanged, StringFormat=N2, TargetNullValue=0}" TextAlignment="Center" FontSize="15" Foreground="Blue"
                           VerticalAlignment="Center" Margin="-10 0 0 3"/>
            </Grid>
        </Grid>
        <Grid Tag="YTracker" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <ListView Grid.Row="0" ItemsSource="{Binding YTrackerData, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.1*"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{Binding TaskId}"/>
                            <TextBlock Grid.Column="1" Text="{Binding Name}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Hours}"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <TextBlock HorizontalAlignment="Right" Grid.Row="1" Margin="0 0 10 0" FontSize="20"
                       x:Name="totalYTrackerHours" Text="{Binding Path=TotalYTrackerHours, StringFormat=Итого часов {0:##.00}}"/>
        </Grid>
    </Grid>
</Window>
